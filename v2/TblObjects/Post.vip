//------------------------------------------------------------------------------
//                                                      (c) Корпорация Галактика
// Заработная плата по отделу
// Табличный объект должностей
//------------------------------------------------------------------------------

#include AtlProtocol.vih

Interface Post;

// Должности
Table struct mtPost
(
  Id:   byte,
  Name: s100
)
With index
(
  PostId = Id (unique),
  ByName = Name
);

Create view from mtPost, mtPost mtPost2;

property Id:   byte absolute mtPost.Id;
property Name: s100 absolute mtPost.Name;

index PostId auto;
index ByName auto;

private function GenerateNewId: byte;
{
  result := 1;

  if (GetLast mtPost2 ordered by index PostId = tsOk)
    result := mtPost2.Id + 1;
}

function IModify.doInsert : word;
{
  if (mtPost.Id = 0)
    mtPost.Id := GenerateNewId;

  result := insert current mtPost;
}

function IModify.doUpdate : word;
{
  result := update current mtPost;
}

function IModify.doDelete : word;
{
  result := delete current mtPost;
}

implementation IModify.doFlush  abstract;

constructor Init;
{
  result := true;
  delete all mtPost;
}

public procedure Clear(_wage: IWageView = NullRef);
{
  oWage := _wage;
  delete all mtPost2;
}

public function SaveXml(_e: IDomNode): IDomNode;
{
  var xnode: IDomNode
  xnode := _e.AddNode('rok:Post');
  xnode.AddAttr('rok:Id='   + string(Id));
  xnode.AddAttr('rok:Name=' + Name);
  result := xnode;
}

public function LoadXml(_e: IDomNode): boolean;
{
  ClearBuffer(#mtPost);
  if _e.GetFirstAttr
    do
    {
      case _e.FndAttr.Name of
        'rok:NRec': Id   := GetId(cgPost, comp(_e.FndAttr.Value));
        'rok:Id':   Id   := GetId(cgPost, comp(_e.FndAttr.Value));
        'rok:Name': Name := _e.FndAttr.Value;
      end;
    }
    while (_e.GetNextAttr);

  if (GetFirst mtPost2 where (( mtPost.Id == mtPost2.Id )) <> tsOk)
  {
    insert current mtPost;
    //oWage.Log(APE_INFO, string(mtPost.Id) + '. ' + mtPost.Name);
  }
  result := true;
}

public function SaveRok: boolean;
{
  result := true;
  StartNewRec;
  WriteByte(Id);
  WriteStr(Name);
}

public function LoadRok: boolean;
{
  result := false;

  if CheckNewRec
  {
    ClearBuffer(#mtPost);
    Id   := ReadByte;
    Name := ReadStr;
    if (GetFirst mtPost2 where (( mtPost.Id == mtPost2.Id )) <> tsOk)
    {
      insert current mtPost;
      //oWage.Log(APE_INFO, string(mtPost.Id) + '. ' + mtPost.Name);
    }
    result := true;
  }
}

end.
