//------------------------------------------------------------------------------
//                                                      (c) Корпорация Галактика
// Заработная плата по отделу
// Контрольный отчет по всем сотрудникам за выбранный месяц
//------------------------------------------------------------------------------

DataStream dsReportByMonth
(
  table mtStruct
  (
    [Year]             Year(mtPeriods.dBeg);           // Год
    [Month]            Month(mtPeriods.dBeg);          // Месяц
    [FIO]              mtStruct.Name;                  // Сотрудник
    [DaysPlan]         mtPeriods.PlanDays;             // Дней по плану
    [DaysFact]         mtPersPer.FactDays;             // Дней фактически
    [Salary]           UE(R01);                        // Оклад
    [Salary_Check]     GetPrevSalary;                  // Оклад за прошлый месяц
    [DepBonus]         UE(R02);                        // Премия отдела
    [GovBonus]         UE(R03);                        // Премия Управления
    [PrBisnes]         UE(R04);                        // Проектный бизнес
    [OthBonus]         UE(R22);                        // Остальные начисления
                                                       // Начислено
    [Accrued]          UE(R07);
    [TaxDeductKol]     mtAppoint.TaxDed;               // Льгота по подоходному налогу, количество
    [TaxDeductRB]      RB(R21);                        // Льгота по подоходному налогу, BYN
    [TaxDeductUE]      UE(R21);                        // Льгота по подоходному налогу, USD
    [IncomingRB]       RB(R08);                        // Вх. остаток, BYN
    [IncomingRB_Check] mtDebtOut.GetValue(mtStruct.Person, Sub_Months(mtPeriods.dBeg, 1), GetSumTitle(R08), cgNetUSD); // Вх. остаток - контроль с распечаткой, BYN
    [IncomingUE]       UE(R08);                        // Вх. остаток, USD
    [ToIssue]          UE(R09);                        // К выдаче
    [PrepaymentRB]     RB(R10);                        // Аванс, BYN
    [PrepaymentEx]     Rate(R10);                      // Аванс, курс
    [PrepaymentUE]     UE(R10);                        // Аванс, USD
    [PaymBetwinRB]     RB(R11);                        // Отпуск, BYN
    [PaymBetwinEx]     if(RB(R11) = 0, 0, Rate(R11));  // Отпуск, курс
    [PaymBetwinUE]     UE(R11);                        // Отпуск, USD
    [SecPartRB]        RB(R13);                        // Выплата, BYN
    [SecPartEx]        if(RB(R13) = 0, 0, Rate(R13));  // Выплата, курс
    [SecPartUE]        UE(R13);                        // Выплата, USD
    [ThrdPartRB]       RB(R23);                        // Остальные выплаты, BYN
    [ThrdPartEx]       0;                              // Остальные выплаты, курс
    [ThrdPartUE]       UE(R23);                        // Остальные выплаты, USD
    [TotalIssuedRB]    RB(R16);                        // Итого выдано, BYN
    [TotalIssuedUE]    UE(R16);                        // Итого выдано, USD
    [OutgoingRB]       RB(R15);                        // Исх. остаток, BYN
    [OutgoingUE]       UE(R09) - UE(R16);              // Исх. остаток, USD
    [OutgoingUE_Check] UE(R15);                        // Исх. остаток - контроль с распечаткой, USD
    [OutgoingUE_Delta] UE(R09) - UE(R16) - UE(R15);
  );
)
end;

procedure ReportByMonth;
{
  PushPos(#mtNachisl);
  PushPos(#mtPayment);
  PushPos(#mtStruct);
  ResetBounds(#mtStruct);
  PushCondition(tcSotrOnly);
  RunFReport(dsReportByMonth, '', false);
  PopCondition(tcSotrOnly);
  SetBounds(#mtStruct);
  PopPos(#mtStruct);
  PopPos(#mtPayment);
  PopPos(#mtNachisl);
}
